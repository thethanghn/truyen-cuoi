<h1>Xiangqi</h1>
<div class="row-fluid">
    <div class="col-md-8 left-col">
        <ul class="rooms">
        </ul>
    </div>
    <div class="col-md-4">
        <%= form_tag play_games_xiangqi_index_path, method: :get, class: 'form-new-game horizontal-form' do |f| %>
            <div class="form-group">
                <input type="text" name="gameId" id="newgamename" class="form-control" placeholder="Welcome to my room" />
                <input type="hidden" name="ope" class="ope" value="init"/>
            </div>
            <div class="form-group">
                <input type="submit" id="newgamebtn" class="btn btn-primary" value="New Game"/>
            </div>
        <% end %>
        <div>
            <div id="theDialogue"></div>
            <form class="photon" id="mainfrm">
                <input type="text" id="input" />
                <input type="submit" value="Send" />
            </form>
            <button id="colorbtn">Change Color</button>
            <button id="leavebtn">Leave</button>
        </div>
        <div id="statetxt">
            undef
        </div>
    </div>
</div>

<script type="text/javascript" src="/Photon/3rdparty/swfobject.js"></script>
<script type="text/javascript" src="/Photon/3rdparty/web_socket.js"></script>
<script type="text/javascript" src="/Photon/Photon-Javascript_SDK.js"></script>

<script type="text/javascript">

var AppInfo = {
//  Wss: true,
    AppId: "<%= ENV['PHOTON_APP_ID'] %>",
    AppVersion: "1.0",
//    FbAppId: "you fb app id", 
}

</script>
<%= javascript_include_tag "photon_rooms" %>
<script type="text/jsx">
var roomManager;
var ConnectOnStart = true;

var RoomList = React.createClass({
    joinGameHandler: function(ev) {
        var gameId = $(ev.target).data('room');
        console.log(gameId);
        if (this.props.joinGameHandler) {
            this.props.joinGameHandler.call(null, gameId);
        }
    },
    renderRooms: function(){
        var rooms = this.props.rooms;
        var self = this;
        return rooms.map(function(room) {
            return <li>{room.name} - <a href="#" data-room={room.name} onClick={self.joinGameHandler}>Join</a></li>;
        });
    },
    render: function() {
        return <ul>
            {this.renderRooms()}
        </ul>;
    }
});

function joinGameHandler(gameId) {
    console.log('abc');
    roomManager.joinGameHandler(gameId);
}

function renderRooms(rooms) {
    var menu = $(".rooms");
    React.render(<RoomList rooms={rooms} joinGameHandler={joinGameHandler}/>, menu.get(0));
}

RoomManager.prototype.onRoomList = function(rooms) {
    console.log('redefined roomlist');
    renderRooms(rooms);

    this.output("Demo: Rooms total: " + rooms.length);
    // this.updateRoomButtons();
}


RoomManager.prototype.joinGameHandler = function(gameId) {
    var url = [this.options.gameUrl, [['gameId', gameId].join('='), ['ope', 'join'].join('=')].join('&')].join('?');
    console.log(url);
    window.location.href = url;
}

$(function () {
    $('.form-new-game').submit(function(){
        var name = $("#newgamename").val();
        if (!name) {
            $("#newgamename").focus().parent().addClass('has-error');
            return false;
        }
        return true;
    });

    roomManager = new RoomManager({gameUrl: '<%= play_games_xiangqi_index_path %>'});
    roomManager.start();
});

</script>
<script language="javascript">
    WEB_SOCKET_SWF_LOCATION = "/Photon/3rdparty/WebSocketMain.swf";
    // Set this to dump debug message from Flash to console.log:
    WEB_SOCKET_DEBUG = false;
</script>